/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-12-07 00:59:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.paper.month;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class month_005fpaper_005fadd_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/header/header.jsp", Long.valueOf(1541900141329L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>发布试卷</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap/vendor/bootstrap/css/bootstrap.css\"/>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap/dist/css/bootstrapValidator.css\"/>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap/bootstraptable/bootstrap-table.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap/bootstrapselect/css/bootstrap-select.min.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap/bootstrapdatetimepicker/css/bootstrap-datetimepicker.min.css\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap/vendor/jquery/jquery-1.10.2.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/js/tool.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap/bootstraptable/bootstrap-table.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap/bootstraptable/bootstrap-table-zh-CN.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap/bootstrap.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap/dist/js/bootstrapValidator.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap/bootstrapselect/js/bootstrap-select.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap/bootstrapselect/js/i18n/defaults-zh_CN.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/plugins/layer/layer.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap/bootstrapdatetimepicker/js/bootstrap-datetimepicker.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap/bootstrapdatetimepicker/js/locales/bootstrap-datetimepicker.zh-CN.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/plugins/layui/css/layui.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/plugins/layui/layui.js\"></script>");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/kindeditor-master/kindeditor-all.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/kindeditor-master/lang/zh-CN.js\"></script>\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/kindeditor-master/themes/default/default.css\" />\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/plugins/layui/css/layui.css\" />\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("//校验规则+提交事件\r\n");
      out.write("function formValidator(){\r\n");
      out.write("\t$(\"#examForm\").bootstrapValidator({\r\n");
      out.write("\t\tmessage:'该值无法校验',\r\n");
      out.write("\t\tfeedbackIcons: {\r\n");
      out.write("\t           valid: 'glyphicon glyphicon-ok',\r\n");
      out.write("\t           invalid: 'glyphicon glyphicon-remove',\r\n");
      out.write("\t           validating: 'glyphicon glyphicon-refresh'\r\n");
      out.write("\t    },\r\n");
      out.write("\t    fields:{\r\n");
      out.write("\t    \ttypes:{\r\n");
      out.write("\t    \t\tvalidators:{\r\n");
      out.write("\t    \t\t\tnotEmpty:{\r\n");
      out.write("\t    \t\t\t\tmessage:'考试类型不能为空'\r\n");
      out.write("\t    \t\t\t}\r\n");
      out.write("\t    \t\t}\r\n");
      out.write("\t    \t},\r\n");
      out.write("\t    \texamName:{\r\n");
      out.write("\t    \t\tvalidators:{\r\n");
      out.write("\t    \t\t\tnotEmpty:{\r\n");
      out.write("\t    \t\t\t\tmessage:'考试名称不能为空'\r\n");
      out.write("\t    \t\t\t}\r\n");
      out.write("\t    \t\t}\r\n");
      out.write("\t    \t},\r\n");
      out.write("\t    \tstartTime:{\r\n");
      out.write("\t    \t\tvalidators:{\r\n");
      out.write("\t    \t\t\tnotEmpty:{\r\n");
      out.write("\t    \t\t\t\tmessage:'开始时间不能为空'\r\n");
      out.write("\t    \t\t\t}\r\n");
      out.write("\t    \t\t}\r\n");
      out.write("\t    \t},\r\n");
      out.write("\t    \tendTime:{\r\n");
      out.write("\t    \t\tvalidators:{\r\n");
      out.write("\t    \t\t\tnotEmpty:{\r\n");
      out.write("\t    \t\t\t\tmessage:'开始时间不能为空'\r\n");
      out.write("\t    \t\t\t}\r\n");
      out.write("\t    \t\t}\r\n");
      out.write("\t    \t},\r\n");
      out.write("\t    \tclassesIds:{\r\n");
      out.write("          \t\tvalidators:{\r\n");
      out.write("\t    \t\t\tchoice: {\r\n");
      out.write("\t                    min:1,\r\n");
      out.write("\t                    message: '至少要选择一个,且两个以上时,请选择同一阶段'\r\n");
      out.write("\t                }\r\n");
      out.write("\t    \t\t}\r\n");
      out.write("          \t},\r\n");
      out.write("\t    \t'stageId':{\r\n");
      out.write("\t    \t\tvalidators:{\r\n");
      out.write("\t    \t\t\tchoice: {\r\n");
      out.write("\t                    min:1,\r\n");
      out.write("\t                    message: '至少要选择一个'\r\n");
      out.write("\t                }\r\n");
      out.write("\t    \t\t}\r\n");
      out.write("\t    \t},\r\n");
      out.write("\t    \tsingleNumber:{\r\n");
      out.write("\t    \t\tvalidators:{\r\n");
      out.write("\t    \t\t\tdigits: {\r\n");
      out.write("\t    \t\t         message: '该值只能包含数字'\r\n");
      out.write("\t    \t\t    },\r\n");
      out.write("\t    \t\t    stringLength:{\r\n");
      out.write("\t    \t\t    \tmin:1,\r\n");
      out.write("\t    \t\t    \tmax:2,\r\n");
      out.write("\t    \t\t    \tmessage:'只能输入1-2位纯数字'\r\n");
      out.write("\t    \t\t    }\r\n");
      out.write("\t    \t\t}\r\n");
      out.write("\t    \t},\r\n");
      out.write("\t    \tsingleFraction:{\r\n");
      out.write("\t    \t\tvalidators:{\r\n");
      out.write("\t    \t\t\tdigits: {\r\n");
      out.write("\t    \t\t         message: '该值只能包含数字'\r\n");
      out.write("\t    \t\t    },\r\n");
      out.write("\t    \t\t    stringLength:{\r\n");
      out.write("\t    \t\t    \tmin:1,\r\n");
      out.write("\t    \t\t    \tmax:2,\r\n");
      out.write("\t    \t\t    \tmessage:'只能输入1-2位纯数字'\r\n");
      out.write("\t    \t\t    }\r\n");
      out.write("\t    \t\t}\r\n");
      out.write("\t    \t},\r\n");
      out.write("\t    \tmulitNumber:{\r\n");
      out.write("\t    \t\tvalidators:{\r\n");
      out.write("\t    \t\t\tdigits: {\r\n");
      out.write("\t    \t\t         message: '该值只能包含数字'\r\n");
      out.write("\t    \t\t    },\r\n");
      out.write("\t    \t\t    stringLength:{\r\n");
      out.write("\t    \t\t    \tmin:1,\r\n");
      out.write("\t    \t\t    \tmax:2,\r\n");
      out.write("\t    \t\t    \tmessage:'只能输入1-2位纯数字'\r\n");
      out.write("\t    \t\t    }\r\n");
      out.write("\t    \t\t}\r\n");
      out.write("\t    \t},\r\n");
      out.write("\t    \tmulitFraction:{\r\n");
      out.write("\t    \t\tvalidators:{\r\n");
      out.write("\t    \t\t\tdigits: {\r\n");
      out.write("\t    \t\t         message: '该值只能包含数字'\r\n");
      out.write("\t    \t\t    },\r\n");
      out.write("\t    \t\t    stringLength:{\r\n");
      out.write("\t    \t\t    \tmin:1,\r\n");
      out.write("\t    \t\t    \tmax:2,\r\n");
      out.write("\t    \t\t    \tmessage:'只能输入1-2位纯数字'\r\n");
      out.write("\t    \t\t    }\r\n");
      out.write("\t    \t\t}\r\n");
      out.write("\t    \t},\r\n");
      out.write("\t    \tqaaNumber:{\r\n");
      out.write("\t    \t\tvalidators:{\r\n");
      out.write("\t    \t\t\tdigits: {\r\n");
      out.write("\t    \t\t         message: '该值只能包含数字'\r\n");
      out.write("\t    \t\t    },\r\n");
      out.write("\t    \t\t    stringLength:{\r\n");
      out.write("\t    \t\t    \tmin:1,\r\n");
      out.write("\t    \t\t    \tmax:2,\r\n");
      out.write("\t    \t\t    \tmessage:'只能输入1-2位纯数字'\r\n");
      out.write("\t    \t\t    }\r\n");
      out.write("\t    \t\t}\r\n");
      out.write("\t    \t},\r\n");
      out.write("\t    \tqaaFraction:{\r\n");
      out.write("\t    \t\tvalidators:{\r\n");
      out.write("\t    \t\t\tdigits: {\r\n");
      out.write("\t    \t\t         message: '该值只能包含数字'\r\n");
      out.write("\t    \t\t    },\r\n");
      out.write("\t    \t\t    stringLength:{\r\n");
      out.write("\t    \t\t    \tmin:1,\r\n");
      out.write("\t    \t\t    \tmax:2,\r\n");
      out.write("\t    \t\t    \tmessage:'只能输入1-2位纯数字'\r\n");
      out.write("\t    \t\t    }\r\n");
      out.write("\t    \t\t}\r\n");
      out.write("\t    \t},\r\n");
      out.write("\t    \tupperNumber:{\r\n");
      out.write("\t    \t\tvalidators:{\r\n");
      out.write("\t    \t\t\tdigits: {\r\n");
      out.write("\t    \t\t         message: '该值只能包含数字'\r\n");
      out.write("\t    \t\t    },\r\n");
      out.write("\t    \t\t    stringLength:{\r\n");
      out.write("\t    \t\t    \tmin:1,\r\n");
      out.write("\t    \t\t    \tmax:2,\r\n");
      out.write("\t    \t\t    \tmessage:'只能输入1-2位纯数字'\r\n");
      out.write("\t    \t\t    }\r\n");
      out.write("\t    \t\t}\r\n");
      out.write("\t    \t},\r\n");
      out.write("\t    \tupperFraction:{\r\n");
      out.write("\t    \t\tvalidators:{\r\n");
      out.write("\t    \t\t\tdigits: {\r\n");
      out.write("\t    \t\t         message: '该值只能包含数字'\r\n");
      out.write("\t    \t\t    },\r\n");
      out.write("\t    \t\t    stringLength:{\r\n");
      out.write("\t    \t\t    \tmin:1,\r\n");
      out.write("\t    \t\t    \tmax:2,\r\n");
      out.write("\t    \t\t    \tmessage:'只能输入1-2位纯数字'\r\n");
      out.write("\t    \t\t    }\r\n");
      out.write("\t    \t\t}\r\n");
      out.write("\t    \t}\r\n");
      out.write("\t    }\r\n");
      out.write("\t}).on('success.form.bv',function(e){\r\n");
      out.write("\t\te.preventDefault();\r\n");
      out.write("\r\n");
      out.write("\t\tvar types = $('input[name=\"types\"]:checked').val(); //试卷类型  1周测 2内测 3月考\r\n");
      out.write("\t\tvar examName = $('input[name=\"examName\"]:checked').val();  //试卷名称\r\n");
      out.write("\t\tvar startTime  = $('input[name=\"startTime\"]').val(); //开始时间\r\n");
      out.write("\t\tvar endTime = $('input[name=\"endTime\"]').val(); //结束时间\r\n");
      out.write("\t\tvar classesIds = $(\"input:checkbox[name='classesIds']:checked\").map(function(index,elem) {return $(elem).val();}).get().join(','); //班级的id组 以,号拼接\r\n");
      out.write("\t\tvar stageId  = $('input[name=\"stageId\"]:checked').val(); //阶段id\r\n");
      out.write("\t\tvar booksId  = $('input[name=\"booksId\"]:checked').val(); //课程id\r\n");
      out.write("\t\tvar chapterIds = $(\"input:checkbox[name='chapterIds']:checked\").map(function(index,elem) {return $(elem).val();}).get().join(','); //章节id组  以,号拼接\r\n");
      out.write("\t\tvar typesIds  = $('input:checkbox[name=\"typesIds\"]:checked').map(function(index,elem) {return $(elem).val();}).get().join(',');//题型 1--2--5--6     1-2-5   1-2-6   1-2\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//必要参数\t\t\t\t\t拼接URL上的参数及参数值   http://localhost:8080/intergate/saveOrUpdate.do?types=types&examName=examName\r\n");
      out.write("\t\tvar data =  \"types=\"+types+\r\n");
      out.write("\t\t\t\"&examName=\"+examName+\r\n");
      out.write("\t\t\t\"&startTime=\"+startTime+\r\n");
      out.write("\t\t\t\"&endTime=\"+endTime+\r\n");
      out.write("\t\t\t\"&classesIds=\"+classesIds+\r\n");
      out.write("\t\t\t\"&stageId=\"+stageId+\r\n");
      out.write("\t\t\t\"&booksId=\"+booksId+\r\n");
      out.write("\t\t\t\"&chapterIds=\"+chapterIds+\r\n");
      out.write("\t\t\t\"&typesIds=\"+typesIds;\r\n");
      out.write("\t\r\n");
      out.write("\t\tvar beforeTime = new Date(startTime).getTime();\r\n");
      out.write("\t\tvar nowTime = new Date().getTime();\r\n");
      out.write("\t\tvar afterTime = new Date(endTime).getTime();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(beforeTime < nowTime){\r\n");
      out.write("\t\t\tlayer.msg(\"开始时间不能小于当前时间\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(afterTime < nowTime){\r\n");
      out.write("\t\t\tlayer.msg(\"结束时间不能小于当前时间\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(beforeTime >= afterTime){\r\n");
      out.write("\t\t\tlayer.msg(\"结束时间不能小于等于开始时间\");\r\n");
      out.write("\t\t\treturn;\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(classesIds == '' || classesIds == null || classesIds == undefined){\r\n");
      out.write("\t\t\tlayer.msg(\"请选择班级\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(classesIds != '' || classesIds != null || classesIds != undefined){\r\n");
      out.write("\t\t\tvar result;\r\n");
      out.write("\t\t\tvar msg;\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype:'POST',\r\n");
      out.write("\t\t\t\tdataType:'json',\r\n");
      out.write("\t\t\t\tcache:false,\r\n");
      out.write("\t\t\t\tasync:false,\r\n");
      out.write("\t\t\t\turl:getRootPath()+'/classes/get/check.do',\r\n");
      out.write("\t\t\t\tdata:{\"classesIds\":classesIds},\r\n");
      out.write("\t\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\t\tif(data.code == 5000){\r\n");
      out.write("\t\t\t\t\t\tmsg = data.message;\r\n");
      out.write("\t\t\t\t\t\tresult = 5000;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tif(result == 5000){\r\n");
      out.write("\t\t\t\tlayer.msg(msg);\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//判断是否选择了题型\r\n");
      out.write("\t\tif(typesIds == null || typesIds == \"\") {\r\n");
      out.write("\t\t\tparent.layer.msg(\"考试试卷必须选择一种题型\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//判断是否选择了单选题\r\n");
      out.write("\t\tif(typesIds.indexOf(\"1\") != -1){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar singleNumber = $(\"#singleNumber\").val(); //单选题的出题数量\r\n");
      out.write("\t\t\tvar singleFraction = $(\"#singleFraction\").val();//单选题的每题分数     单选题总分: singleNumber * singleFraction\r\n");
      out.write("\t\t\tif(singleNumber == null ||singleNumber == \"\" || singleNumber == undefined){\r\n");
      out.write("\t\t\t\tparent.layer.msg(\"您已选择单选题,请给出题目数量\");\r\n");
      out.write("\t\t\t\treturn ;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(singleFraction == null ||singleFraction == \"\" || singleFraction == undefined){\r\n");
      out.write("\t\t\t\tparent.layer.msg(\"您已选择单选题,请给出每题分数\");\r\n");
      out.write("\t\t\t\treturn ;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(singleNumber > 0 && qaaFraction <=0 ){\r\n");
      out.write("\t\t\t\tparent.layer.msg(\"分数不能小于0\");\r\n");
      out.write("\t\t\t\treturn ;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t//将单选题信息拼接到参数内\r\n");
      out.write("\t\t\tdata += \"&singleNumber=\"+singleNumber +\"&singleFraction=\"+singleFraction;    //关键代码\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//判断是否选择了多选题\r\n");
      out.write("\t\tif(typesIds.indexOf(\"2\") != -1){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar mulitNumber = $(\"#mulitNumber\").val(); //多选题的出题数量\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\tvar mulitFraction = $(\"#mulitFraction\").val();//多选题的出题分数\t\t多选题总分: mulitNumber * mulitFraction\r\n");
      out.write("\t\t\tif(mulitNumber == null ||mulitNumber == \"\" || mulitNumber == undefined){\r\n");
      out.write("\t\t\t\tparent.layer.msg(\"您已选择问答题,请给出题目数量\");\r\n");
      out.write("\t\t\t\treturn ;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(mulitFraction == null ||mulitFraction == \"\" || mulitFraction == undefined){\r\n");
      out.write("\t\t\t\tparent.layer.msg(\"您已选择问答题,请给出每题分数\");\r\n");
      out.write("\t\t\t\treturn ;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(mulitNumber > 0 && qaaFraction <=0 ){\r\n");
      out.write("\t\t\t\tparent.layer.msg(\"分数不能小于0\");\r\n");
      out.write("\t\t\t\treturn ;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t//拼接多选题信息\r\n");
      out.write("\t\t\tdata += \"&mulitNumber=\"+mulitNumber +\"&mulitFraction=\"+mulitFraction;    //关键代码\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\tif(typesIds.indexOf(\"5\") != -1){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar qaaNumber = $(\"#qaaNumber\").val(); //问答题的出题数量    \r\n");
      out.write("\t\t\tvar qaaFraction = $(\"#qaaFraction\").val();//问答题的每题分数   问答题总分: qaaNumber * qaaFraction\r\n");
      out.write("\t\t\tif(qaaNumber == null ||qaaNumber == \"\" || qaaNumber == undefined){\r\n");
      out.write("\t\t\t\tparent.layer.msg(\"您已选择问答题,请给出题目数量\");\r\n");
      out.write("\t\t\t\treturn ;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(qaaFraction == null ||qaaFraction == \"\" || qaaFraction == undefined){\r\n");
      out.write("\t\t\t\tparent.layer.msg(\"您已选择问答题,请给出每题分数\");\r\n");
      out.write("\t\t\t\treturn ;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(qaaNumber > 0 && qaaFraction <=0 ){\r\n");
      out.write("\t\t\t\tparent.layer.msg(\"分数不能小于0\");\r\n");
      out.write("\t\t\t\treturn ;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(qaaNumber >= 4){\r\n");
      out.write("\t\t\t\tparent.layer.msg(\"为考虑考试时间的合理性,问答题不得多于4道\");\r\n");
      out.write("\t\t\t\treturn ;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdata += \"&qaaNumber=\"+qaaNumber +\"&qaaFraction=\"+qaaFraction;    //关键代码\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(typesIds.indexOf(\"6\") != -1){\r\n");
      out.write("\t\t\tvar upperNumber = $(\"#upperNumber\").val();\r\n");
      out.write("\t\t\tvar upperFraction = $(\"#upperFraction\").val();\r\n");
      out.write("\t\t\tif(upperNumber == null ||upperNumber == \"\" || upperNumber == undefined){\r\n");
      out.write("\t\t\t\tlayer.msg(\"您已选择上机题,请给出题目数量\");\r\n");
      out.write("\t\t\t\treturn ;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(upperFraction == null ||upperFraction == \"\" || upperFraction == undefined){\r\n");
      out.write("\t\t\t\tlayer.msg(\"您已选择上机题,请给出每题分数\");\r\n");
      out.write("\t\t\t\treturn ;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(upperNumber > 0 && upperFraction <=0 ){\r\n");
      out.write("\t\t\t\tlayer.msg(\"分数不能小于0\");\r\n");
      out.write("\t\t\t\treturn ;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(upperNumber >= 3){\r\n");
      out.write("\t\t\t\tlayer.msg(\"为考虑合理的考试时间安排,上机题不得多于3道\");\r\n");
      out.write("\t\t\t\treturn ;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(upperNumber <= 0){\r\n");
      out.write("\t\t\t\tlayer.msg(\"请正确定义题目数量\");\r\n");
      out.write("\t\t\t\treturn ;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdata += \"&upperNumber=\"+upperNumber +\"&upperFraction=\"+upperFraction; //关键代码\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\tvar typesIdArray = typesIds.split(\",\");//关键代码\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar sum = 0;\r\n");
      out.write("\t\tvar singleResult = 0;\r\n");
      out.write("\t\tvar mulitResult = 0;\r\n");
      out.write("\t\tvar qaaResult = 0;\r\n");
      out.write("\t\tvar upperResult = 0;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfor(var i = 0; i < typesIdArray.length; i ++ ){\r\n");
      out.write("\t\t\tif(typesIdArray[i] == \"1\"){\r\n");
      out.write("\t\t\t\tsingleResult = singleNumber * singleFraction;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(typesIdArray[i] == \"2\"){\r\n");
      out.write("\t\t\t\tmulitResult = mulitNumber * mulitFraction;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(typesIdArray[i] == \"5\"){\r\n");
      out.write("\t\t\t\tqaaResult = qaaNumber * qaaFraction;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(typesIdArray[i] == \"6\"){\r\n");
      out.write("\t\t\t\tupperResult = upperNumber * upperFraction;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tsum += singleResult + mulitResult  + qaaResult + upperResult;\r\n");
      out.write("\r\n");
      out.write("\t\tif(sum != 100){\r\n");
      out.write("\t\t\tlayer.msg(\"总分不是100分,请重新编辑\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(booksId == '' || booksId == null || booksId == undefined){\r\n");
      out.write("\t\t\tlayer.msg(\"请选择课程\");\r\n");
      out.write("\t\t\treturn ;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(chapterIds == '' || classesIds == null || classesIds == undefined){\r\n");
      out.write("\t\t\tlayer.msg(\"请选择章节\");\r\n");
      out.write("\t\t\treturn ;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tlayer.open({\r\n");
      out.write("\t\t\ttype:2,\r\n");
      out.write("\t\t\tcontent:getRootPath()+'/paper/month/show/info.do?'+data,\r\n");
      out.write("\t\t\tarea:['500px','450px'],\r\n");
      out.write("\t\t\tshade: [0.8, '#393D49'],\r\n");
      out.write("\t\t\tbtn:[\"确认发布\",\"取消\"],\r\n");
      out.write("\t\t\tyes:function(index){\r\n");
      out.write("\t\t\t\t$.post($(\"#examForm\").attr('action'), $(\"#examForm\").serialize(), function(result) {\r\n");
      out.write("\t\t    \t    parent.layer.msg(result.message);\r\n");
      out.write("\t\t\t\t\twindow.location.href=getRootPath()+\"/paper/month/s/view.do\";\r\n");
      out.write("\t\t\t    }, 'json');\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tbtn2:function(index){\r\n");
      out.write("\t\t\t\tlayer.close(index);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\r\n");
      out.write("\t});\r\n");
      out.write("}\t\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"container\" style=\"padding-top: 20px;\">\r\n");
      out.write("<blockquote class=\"layui-elem-quote\">添加月考试卷 </blockquote>\r\n");
      out.write("\t<form id=\"examForm\"  method=\"post\" class=\"form-horizontal\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/paper/month/add/entity.do\" >\r\n");
      out.write("\t\t<input  id=\"id\" name=\"id\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${exam.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\" type=\"hidden\" />\r\n");
      out.write("\t   <blockquote class=\"layui-elem-quote layui-quote-nm\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"types\" class=\"col-sm-2 control-label\">考试类型</label>\r\n");
      out.write("\t\t\t<div class=\"col-sm-10\" data-toggle=\"buttons\">\r\n");
      out.write("\t\t\t\t<label class=\"radio-inline btn btn-default active\">\r\n");
      out.write("\t\t\t\t\t<input id=\"types\" name=\"types\" value=\"3\" type=\"radio\" checked=\"checked\" /> 月考（系统默认）\r\n");
      out.write("\t\t\t\t</label>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"booksId\" class=\"col-sm-2 control-label\">考试名称</label>\r\n");
      out.write("\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t<input id=\"monthValue\" name=\"examName\" type=\"text\" placeholder=\"输入考试名称\" class=\"form-control\" />\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"form-group\">\t\r\n");
      out.write("\t\t\t<label for=\"startTime\" class=\"col-sm-2 control-label\">开始时间</label>\r\n");
      out.write("\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t \t<div class=\"input-group date form_datetime col-md-12\" data-date=\"2018-10-01\" style=\"width: 350px;\" data-date-format=\"yyyy-MM-dd\" data-link-field=\"dtp_input1\">\r\n");
      out.write("\t                <input class=\"form-control\" id=\"startTime\" name=\"startTime\" size=\"16\" type=\"text\" value='");
      if (_jspx_meth_fmt_005fformatDate_005f0(_jspx_page_context))
        return;
      out.write("' readonly>\r\n");
      out.write("                    <span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-remove\"></span></span>\r\n");
      out.write("\t\t\t\t\t<span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-th\"></span></span>\r\n");
      out.write("                </div>\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"dtp_input1\" value=\"\" /><br/>\r\n");
      out.write("\t\t\t</div> \r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"form-group\">\t\r\n");
      out.write("\t\t\t<label for=\"endTime\" class=\"col-sm-2 control-label\">结束时间</label>\r\n");
      out.write("\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t \t<div class=\"input-group date form_datetime col-md-12\" data-date=\"2018-10-01\" style=\"width: 350px;\" data-date-format=\"yyyy-MM-dd\" data-link-field=\"dtp_input2\">\r\n");
      out.write("\t                <input class=\"form-control\" id=\"endTime\" name=\"endTime\" size=\"16\" type=\"text\" value='");
      if (_jspx_meth_fmt_005fformatDate_005f1(_jspx_page_context))
        return;
      out.write("' readonly>\r\n");
      out.write("                    <span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-remove\"></span></span>\r\n");
      out.write("\t\t\t\t\t<span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-th\"></span></span>\r\n");
      out.write("                </div>\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"dtp_input2\" value=\"\" /><br/>\r\n");
      out.write("\t\t\t</div> \r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"classTD\" class=\"col-sm-2 control-label\">考试班级</label>\r\n");
      out.write("\t\t\t<div id=\"classTD\" class=\"col-sm-10\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"stageTD\" class=\"col-sm-2 control-label\">阶段列表</label>\r\n");
      out.write("\t\t\t<div id=\"stageTD\" class=\"col-sm-10\"></div>\r\n");
      out.write("\t\t\t<input id=\"stageValue\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${exam.stageId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\"/>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"booksTD\" class=\"col-sm-2 control-label\">课程列表</label>\r\n");
      out.write("\t\t\t<div id=\"booksTD\" class=\"col-sm-10\"></div>\r\n");
      out.write("\t\t\t<input id=\"booksValue\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${exam.booksId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\"/>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"chapterTD\" class=\"col-sm-2 control-label\">章节列表</label>\r\n");
      out.write("\t\t\t<div id=\"chapterTD\" class=\"col-sm-10\"></div>\r\n");
      out.write("\t\t\t<input id=\"chapterValue\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${exam.chapterId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\"/>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</blockquote>\t\r\n");
      out.write("\t\r\n");
      out.write("\t<blockquote class=\"layui-elem-quote\">\r\n");
      out.write("\t\t<input type=\"checkbox\" name=\"typesIds\" value=\"1\" />试卷中加入单选题<span id=\"singleCount\"></span> \r\n");
      out.write("\t</blockquote>\r\n");
      out.write("\t<blockquote class=\"layui-elem-quote layui-quote-nm\">\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"singleNumber\" class=\"col-sm-2 control-label\">单选数量</label>\r\n");
      out.write("\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t<input id=\"singleNumber\" name=\"singleNumber\" onblur=\"checkNumber()\" type=\"text\" placeholder=\"输入单选题的数量\" value=\"\" class=\"form-control\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"singleFraction\" class=\"col-sm-2 control-label\">单选分数</label>\r\n");
      out.write("\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t<input id=\"singleFraction\" name=\"singleFraction\" type=\"text\" placeholder=\"输入单选题的每题分数\" value=\"\" class=\"form-control\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</blockquote>\r\n");
      out.write("\t\r\n");
      out.write("\t<blockquote class=\"layui-elem-quote\">\r\n");
      out.write("\t\t<input type=\"checkbox\" name=\"typesIds\" value=\"2\" />试卷中加入多选题<span id=\"mulitCount\"></span>\t\r\n");
      out.write("\t</blockquote>\r\n");
      out.write("\t<blockquote class=\"layui-elem-quote layui-quote-nm\">\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"mulitNumber\" class=\"col-sm-2 control-label\">多选数量</label>\r\n");
      out.write("\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t<input id=\"mulitNumber\" name=\"mulitNumber\" onblur=\"checkNumber()\" type=\"text\" placeholder=\"输入多选题的数量\" value=\"\" class=\"form-control\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"mulitFraction\" class=\"col-sm-2 control-label\">多选分数</label>\r\n");
      out.write("\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t<input id=\"mulitFraction\" name=\"mulitFraction\" type=\"text\" placeholder=\"输入多选题的每题分数\" value=\"\" class=\"form-control\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</blockquote>\r\n");
      out.write("\t\r\n");
      out.write("\t<blockquote class=\"layui-elem-quote\">\r\n");
      out.write("\t\t<input type=\"checkbox\" name=\"typesIds\" value=\"5\"/>试卷中加入问答题<span id=\"qaaCount\"></span>\r\n");
      out.write("\t</blockquote>\r\n");
      out.write("\t<blockquote class=\"layui-elem-quote layui-quote-nm\">\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"qaaNumber\" class=\"col-sm-2 control-label\">问答数量</label>\r\n");
      out.write("\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t<input id=\"qaaNumber\" onfocus=\"checkdBox\" name=\"qaaNumber\" onblur=\"checkNumber()\" type=\"text\" placeholder=\"输入问答题的数量\" value=\"\" class=\"form-control\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"qaaFraction\" class=\"col-sm-2 control-label\">问答分数</label>\r\n");
      out.write("\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t<input id=\"qaaFraction\" name=\"qaaFraction\" type=\"text\" placeholder=\"输入问答题的每题分数\" value=\"\" class=\"form-control\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</blockquote>\r\n");
      out.write("\t\r\n");
      out.write("\t<blockquote class=\"layui-elem-quote\">\r\n");
      out.write("\t\t<input type=\"checkbox\" name=\"typesIds\" value=\"6\"/>试卷中加入上机题<span id=\"upperCount\"></span>\r\n");
      out.write("\t</blockquote>\r\n");
      out.write("\t<blockquote class=\"layui-elem-quote layui-quote-nm\">\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"upperNumber\" class=\"col-sm-2 control-label\">上机数量</label>\r\n");
      out.write("\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t<input id=\"upperNumber\" name=\"upperNumber\" onblur=\"checkNumber()\" type=\"text\" placeholder=\"输入上机题的数量\" value=\"\" class=\"form-control\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"upperFraction\" class=\"col-sm-2 control-label\">上机分数</label>\r\n");
      out.write("\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t<input id=\"upperFraction\" name=\"upperFraction\" type=\"text\" placeholder=\"输入上机题的每题分数\" value=\"\" class=\"form-control\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</blockquote>\r\n");
      out.write("\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t<center>\r\n");
      out.write("         \t\t<button id=\"subBtn\" type=\"submit\" class=\"col-sm-12 layui-btn\"><i class=\"fa fa-times\">提交</i></button>\r\n");
      out.write("\t\t\t</center>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function(){\r\n");
      out.write("\t\r\n");
      out.write("\t history.pushState(null, null, document.URL);\r\n");
      out.write("\t    window.addEventListener('popstate', function () {//让后退失效\r\n");
      out.write("\t        history.pushState(null, null, document.URL);\r\n");
      out.write("\t    });\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tdocument.oncontextmenu = function () { \r\n");
      out.write("\t\t\treturn false; \r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t    document.onkeydown = function () {\r\n");
      out.write("\t       if (window.event && window.event.keyCode == 123) {//让右键失效\r\n");
      out.write("\t           event.keyCode = 0;\r\n");
      out.write("\t           event.returnValue = false;\r\n");
      out.write("\t           return false;\r\n");
      out.write("\t        }\r\n");
      out.write("\t \t\t\t  \r\n");
      out.write("\t\t\tif(window.event && window.event.keyCode == 116){//让F5失效\r\n");
      out.write("\t\t\t\tevent.keyCode = 0;\r\n");
      out.write("\t\t\t\tevent.returnValue = false;\r\n");
      out.write("\t\t   \t \treturn false;\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t     };\r\n");
      out.write("\t\r\n");
      out.write("   //开始时间, 结束时间\r\n");
      out.write("   $('#startTime').datetimepicker({\r\n");
      out.write("        format: 'yyyy-mm-dd hh:ii:ss',\r\n");
      out.write("\t    autoclose:true,\t\t//选择完毕自动关闭\r\n");
      out.write("\t    todayBtn:true,\t\t//显示today按钮\r\n");
      out.write("\t    todayHighlight:true, //高亮今日日期\r\n");
      out.write("\t    language:'zh-CN',\r\n");
      out.write("   }).on('hide',function(e) { \r\n");
      out.write("\t   $('#examForm').data('bootstrapValidator') \r\n");
      out.write("\t   .updateStatus('startTime', 'NOT_VALIDATED',null) \r\n");
      out.write("\t   .validateField('startTime'); \r\n");
      out.write("\t   }); \r\n");
      out.write("\t\r\n");
      out.write("   $('#endTime').datetimepicker({\r\n");
      out.write("       format: 'yyyy-mm-dd hh:ii:ss',\r\n");
      out.write("\t    autoclose:true,\t\t//选择完毕自动关闭\r\n");
      out.write("\t    todayBtn:true,\t\t//显示today按钮\r\n");
      out.write("\t    todayHighlight:true, //高亮今日日期\r\n");
      out.write("\t    language:'zh-CN',\r\n");
      out.write("   }).on('hide',function(e) { \r\n");
      out.write("\t   $('#examForm').data('bootstrapValidator') \r\n");
      out.write("\t   .updateStatus('endTime', 'NOT_VALIDATED',null) \r\n");
      out.write("\t   .validateField('endTime'); \r\n");
      out.write("\t   }); \r\n");
      out.write("\t\r\n");
      out.write(" \t//加载班级列表\r\n");
      out.write("\t$.get(getRootPath()+\"/classes/get/nopage.do\", function(data){\r\n");
      out.write("\t\t$(data).each(function(i,v){\r\n");
      out.write("\t\t\t$(\"#classTD\").append(\"<div class='checkbox' style='display:inline-block;padding-right:5px;'><label><input id=\"+v.id+\" name='classesIds' value='\"+v.id+\"' type='checkbox' />\" + this.className);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("\t//加载阶段\r\n");
      out.write("\t$.get(getRootPath()+'/stage/get/nopage.do', function(data){\r\n");
      out.write("\t\t$(data).each(function(i,v){\r\n");
      out.write("\t\t\t$(\"#stageTD\").append(\"<div class='checkbox' style='display:inline-block;padding-right:5px;'><label><input id=\"+v.id+\" name='stageId' value='\"+v.id+\"' type='radio' onclick='loadBooks()'/>\" + this.name);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tformValidator();\r\n");
      out.write("\t}); \r\n");
      out.write("\t\r\n");
      out.write("\tfunction checkdBox(){\r\n");
      out.write("\t\tlayer.msg('选择问答题必须先选中上方复选框,否则提交后无法识别问答题选项');\r\n");
      out.write("\t}\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function loadBooks(){\r\n");
      out.write("\t//获得选中的id\r\n");
      out.write("\tvar checkStageId  = $('input[name=\"stageId\"]:checked').val(); \r\n");
      out.write("\t//加载课程\r\n");
      out.write("\t$.post(getRootPath()+'/books/get/books.do',{\"stageId\":checkStageId},function(data){\r\n");
      out.write("\t\t$(\"#booksTD\").empty();\r\n");
      out.write("\t\t$(data).each(function(i,v){\r\n");
      out.write("\t\t\t$(\"#booksTD\").append(\"<div class='checkbox' style='display:inline-block;padding-right:5px;'><label><input id=\"+v.id+\" name='booksId' value='\"+v.id+\"' type='radio' onclick='loadChapter(\"+v.id+\")'/>\" + this.name);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function loadChapter(booksId){\r\n");
      out.write("\t$.get(getRootPath()+\"/chapter/get/chapter.do\",{\"booksId\":booksId},function(data){\r\n");
      out.write("\t\t$(\"#chapterTD\").empty();\r\n");
      out.write("\t\t$(data).each(function(i,v){\r\n");
      out.write("\t\t\t$(v).each(function(j,value){\r\n");
      out.write("\t\t\t\t$(\"#chapterTD\").append(\"<div class='checkbox' style='display:inline-block;padding-right:5px;'><label><input id=\"+v.id+\" name='chapterIds' value='\"+v.id+\"' type='checkbox' onchange='getQuetionCount()' />\" + this.name);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function getQuetionCount(){\r\n");
      out.write("\tvar stageId = $('input[name=\"stageId\"]:checked').val();\r\n");
      out.write("\tvar booksId = $('input[name=\"booksId\"]:checked').val();\r\n");
      out.write("\tvar chapterIds = $(\"input:checkbox[name='chapterIds']:checked\").map(function(index,elem) {return $(elem).val();}).get().join(',');\r\n");
      out.write("\t$.post(getRootPath()+\"/paper/month/get/total.do\",{\"stageId\":stageId,\"booksId\":booksId,\"chapterIds\":chapterIds},function(data){\r\n");
      out.write("\t\t$(\"#singleCount\").html(\"(题库中有<font color='red' size='4'>\"+data.singleCount+\"</font>道题)\");\r\n");
      out.write("\t\t$(\"#mulitCount\").html(\"(题库中有<font color='red' size='4'>\"+data.multipleCount+\"</font>道题)\");\r\n");
      out.write("\t\t$(\"#qaaCount\").html(\"(题库中有<font color='red' size='4'>\"+data.qaaCount+\"</font>道题)\");\r\n");
      out.write("\t\t$(\"#upperCount\").html(\"(题库中有<font color='red' size='4'>\"+data.upperCount+\"</font>道题)\");\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function checkdBox(){\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function checkNumber(){\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    _jspx_th_fmt_005fformatDate_005f0.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fformatDate_005f0.setParent(null);
    // /WEB-INF/paper/month/month_paper_add.jsp(440,106) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fformatDate_005f0.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${classes.shiftTime}", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    // /WEB-INF/paper/month/month_paper_add.jsp(440,106) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fformatDate_005f0.setPattern("yyyy-MM-dd HH:mm:ss");
    int _jspx_eval_fmt_005fformatDate_005f0 = _jspx_th_fmt_005fformatDate_005f0.doStartTag();
    if (_jspx_th_fmt_005fformatDate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f0);
    return false;
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    _jspx_th_fmt_005fformatDate_005f1.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fformatDate_005f1.setParent(null);
    // /WEB-INF/paper/month/month_paper_add.jsp(452,102) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fformatDate_005f1.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${classes.shiftTime}", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    // /WEB-INF/paper/month/month_paper_add.jsp(452,102) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fformatDate_005f1.setPattern("yyyy-MM-dd HH:mm:ss");
    int _jspx_eval_fmt_005fformatDate_005f1 = _jspx_th_fmt_005fformatDate_005f1.doStartTag();
    if (_jspx_th_fmt_005fformatDate_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f1);
    return false;
  }
}
